kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.controller.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: scheduler-plugins-controller
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      app: scheduler-plugins-controller
  template:
    metadata:
      labels:
        app: scheduler-plugins-controller
    spec:
      serviceAccountName: {{ .Values.controller.name }}
      containers:
      - name: scheduler-plugins-controller
        image: {{ .Values.controller.image }}
        imagePullPolicy: {{ .Values.controller.pullPolicy }}
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: scheduler
  name: {{ .Values.scheduler.name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      component: scheduler
  replicas: {{ .Values.scheduler.replicaCount }}
  template:
    metadata:
      labels:
        component: scheduler
        app: sniffer
    spec:
      serviceAccountName: {{ .Values.scheduler.name }}
      containers:

      # This is the sidecar service "sniffer"
      - image: {{ .Values.sniffer.image }}
        imagePullPolicy: {{ .Values.sniffer.pullPolicy }}
        command:
        - /go/src/sniffer/bin/sniffer
        - --port={{ .Values.sniffer.port }}
        name: sniffer

      # This is the custom scheduler that ALSO builds kubernetes -> scheduler
      - command:
        - /bin/kube-scheduler
        - --config=/etc/kubernetes/scheduler-config.yaml
        image: {{ .Values.scheduler.image }}
        imagePullPolicy: {{ .Values.scheduler.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
          initialDelaySeconds: 15
        name: scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
        resources:
          requests:
            cpu: '0.1'
        securityContext:
          privileged: false
        volumeMounts:
        - name: scheduler-config
          mountPath: /etc/kubernetes
          readOnly: true
      hostNetwork: false
      hostPID: false
      volumes:
      - name: scheduler-config
        configMap:
          name: scheduler-config
